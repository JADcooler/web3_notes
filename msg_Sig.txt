6.9 auth only works well with external functions
(Medium)
6.9.1 Handle
gpersoon
6.9.2 Vulnerability details
6.9.2.1 Impact
The auth modifier of AccessControl.sol doesn’t work as you would expect.
It checks if you are authorized for “msg.sig”, however msg.sig is the
signature of the first function you have called, not of the current function.
So if you call function A, which calls function B, the “auth” modifier of
function B checks if you are authorized for function A!


There is a difference between external an public functions. For external
functions this works as expected because a fresh call (with a new msg.sig)
is always made. However with a public functions, which are called from
within the same contract, this doesn’t happen and the problem described
above occurs.


 /**
     * @dev Each function in the contract has its own role, identified by their msg.sig signature.
     * ROOT can give and remove access to each function, lock any further access being granted to
     * a specific action, or even create other roles to delegate admin control over a function.
     */
    modifier auth() {
        require (_hasRole(msg.sig, msg.sender), "Access denied");
        _;
    }
