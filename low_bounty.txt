for an array if iteration is unbounded, gas limit may expire and revert
so add an upperbound - low severity

Check if conditions, some might require revert instead.
eg token convertion recieve but giveback uses if condition, such that if it fails, tx isn't reverted - high severity

use of uninitialized vars affecting calculations - low severity

fee reduced on msg.sender, example transferFrom reduces fee on msg.sender, though he wasnt part of txn. - low severity

arbitrary value assignment cannot be reversed - medium severity

txns in same block diff block giving different effects, maybe uintended - high severity

no checks on roundID nor timeStamp, resulting in stale
price IN ORACLE - medium severity

STUPID - mempool transaction of an user is noted, attacker sees it and issues same txn with higher priority,
	victim gets error because of DOS since similar parameters were passed by attacker - severity ??? --> https://github.com/code-423n4/2021-05-yield-findings/issues/43

-----------------------------------------------------------------------
____
MINE
____

if modifier code is designed to continue function as
an if-else statement.
he function would return default ( 0 ) if modifier doesn't
revert

recieve vs fallback. incase send, transfer is used

in case function parameter order is imp.
asd({paramName: paramValue, paramName1:paramName2})
is a better way.

super.func() will execute func in all base contracts 
with func()
whereas Base.func() will only execute Base func().

deleting an element doesn't decrease the length of an array.
it just sets the val of that element to 0


The safeTransferFrom function is used to check if the 
address receiving the token is an ERC-721 receiver or not
if transferFrom is called and msg.sender is contract which 
doesn't have ERC721 API then, shit's locked

safe functions aka reentrant and DOS

something that could return false but is not checked
check every func possible return value.

return value could have nothing to do, contrary to expectations.
------------------------------------------------------------------------
________________
EXPRESSION ERROR
________________

in an expression, ethu highest bytes in operand oh
athu based ah than underflow overflow nadakum

eg: uint32 a, uint8 b = 1;

a = 0 - b;
will assign a to 255

DOS errors by underflow/overflow in ^0.8.0;
and critical vulnerabilities can be found lesser than version 8

------------------------------------------------------------------------


SAFE TRANSFER LIB, 
if safe transfer to address is 
contract which was self destructed 
or is invalid.

safe transfer will succeed
